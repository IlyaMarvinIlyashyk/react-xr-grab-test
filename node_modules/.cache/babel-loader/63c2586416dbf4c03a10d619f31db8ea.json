{"ast":null,"code":"var _jsxFileName = \"/Users/ilyamarvin/Desktop/VR/grab-test/src/App.js\";\nimport { VRCanvas, RayGrab, DefaultXRControllers, Interactive } from \"@react-three/xr\";\nimport { OrbitControls, Plane, Sky, Text, useMatcapTexture } from \"@react-three/drei\";\nimport { usePlane, useBox, Physics } from \"@react-three/cannon\";\nimport \"./App.css\";\nimport { useState } from \"react\"; // function Cube({ position, args = [0.06, 0.06, 0.06] }) {\n//   // const [boxRef] = useBox(() => ({ position, mass: 1, args }));\n//   const [tex] = useMatcapTexture(\"C7C0AC_2E181B_543B30_6B6270\");\n//   return (\n//     <Box ref={boxRef} args={args} castShadow>\n//       <meshMatcapMaterial attach=\"material\" matcap={tex} />\n//     </Box>\n//   );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Box(_ref) {\n  let {\n    color,\n    size,\n    scale,\n    children,\n    kinematic,\n    position,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(RayGrab, {\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n      scale: scale,\n      position: position,\n      ...rest,\n      children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n        attach: \"geometry\",\n        args: size\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshPhongMaterial\", {\n        attach: \"material\",\n        color: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Box;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(VRCanvas, {\n      shadowmap: \"true\",\n      vr: \"true\",\n      children: [/*#__PURE__*/_jsxDEV(Sky, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DefaultXRControllers, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          position: [0, 0, 0.06],\n          fontSize: 0.05,\n          color: \"#000\",\n          anchorX: \"center\",\n          anchorY: \"middle\",\n          children: \"Hello react-xr!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"spotLight\", {\n        position: [1, 8, 1],\n        angle: 0.3,\n        penumbra: 1,\n        intensity: 1,\n        castShadow: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Box\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["VRCanvas","RayGrab","DefaultXRControllers","Interactive","OrbitControls","Plane","Sky","Text","useMatcapTexture","usePlane","useBox","Physics","useState","Box","color","size","scale","children","kinematic","position","rest","App"],"sources":["/Users/ilyamarvin/Desktop/VR/grab-test/src/App.js"],"sourcesContent":["import {\n  VRCanvas,\n  RayGrab,\n  DefaultXRControllers,\n  Interactive,\n} from \"@react-three/xr\";\nimport {\n  OrbitControls,\n  Plane,\n  Sky,\n  Text,\n  useMatcapTexture,\n} from \"@react-three/drei\";\nimport { usePlane, useBox, Physics } from \"@react-three/cannon\";\nimport \"./App.css\";\nimport { useState } from \"react\";\n\n// function Cube({ position, args = [0.06, 0.06, 0.06] }) {\n//   // const [boxRef] = useBox(() => ({ position, mass: 1, args }));\n//   const [tex] = useMatcapTexture(\"C7C0AC_2E181B_543B30_6B6270\");\n//   return (\n//     <Box ref={boxRef} args={args} castShadow>\n//       <meshMatcapMaterial attach=\"material\" matcap={tex} />\n//     </Box>\n//   );\n// }\n\nfunction Box({\n  color,\n  size,\n  scale,\n  children,\n  kinematic,\n  position,\n  ...rest\n}: any) {\n  return (\n    <RayGrab>\n      <mesh scale={scale} position={position} {...rest}>\n        <boxBufferGeometry attach=\"geometry\" args={size} />\n        <meshPhongMaterial attach=\"material\" color={color} />\n        {children}\n      </mesh>\n    </RayGrab>\n  );\n}\nexport default function App() {\n  return (\n    <>\n      <VRCanvas shadowmap=\"true\" vr=\"true\">\n        <Sky />\n        <DefaultXRControllers />\n        {/* {[...Array(3)].map((_, i) => (\n          <Cube key={i} size={[1, 0.5, 0.5]} position={[0, i, -0.5]}>\n            <Text\n              position={[1, 1, 0.06]}\n              fontSize={0.05}\n              color=\"#000\"\n              anchorX=\"center\"\n              anchorY=\"middle\"\n            >\n              Hello react-xr!\n            </Text>\n          </Cube>\n        ))} */}\n        <Box>\n          <Text\n            position={[0, 0, 0.06]}\n            fontSize={0.05}\n            color=\"#000\"\n            anchorX=\"center\"\n            anchorY=\"middle\"\n          >\n            Hello react-xr!\n          </Text>\n        </Box>\n        <OrbitControls />\n        <ambientLight intensity={0.5} />\n        <spotLight\n          position={[1, 8, 1]}\n          angle={0.3}\n          penumbra={1}\n          intensity={1}\n          castShadow\n        />\n      </VRCanvas>\n    </>\n  );\n}\n"],"mappings":";AAAA,SACEA,QADF,EAEEC,OAFF,EAGEC,oBAHF,EAIEC,WAJF,QAKO,iBALP;AAMA,SACEC,aADF,EAEEC,KAFF,EAGEC,GAHF,EAIEC,IAJF,EAKEC,gBALF,QAMO,mBANP;AAOA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,OAA3B,QAA0C,qBAA1C;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA,SAASC,GAAT,OAQQ;EAAA,IARK;IACXC,KADW;IAEXC,IAFW;IAGXC,KAHW;IAIXC,QAJW;IAKXC,SALW;IAMXC,QANW;IAOX,GAAGC;EAPQ,CAQL;EACN,oBACE,QAAC,OAAD;IAAA,uBACE;MAAM,KAAK,EAAEJ,KAAb;MAAoB,QAAQ,EAAEG,QAA9B;MAAA,GAA4CC,IAA5C;MAAA,wBACE;QAAmB,MAAM,EAAC,UAA1B;QAAqC,IAAI,EAAEL;MAA3C;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAmB,MAAM,EAAC,UAA1B;QAAqC,KAAK,EAAED;MAA5C;QAAA;QAAA;QAAA;MAAA,QAFF,EAGGG,QAHH;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;KAlBQJ,G;AAmBT,eAAe,SAASQ,GAAT,GAAe;EAC5B,oBACE;IAAA,uBACE,QAAC,QAAD;MAAU,SAAS,EAAC,MAApB;MAA2B,EAAE,EAAC,MAA9B;MAAA,wBACE,QAAC,GAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,oBAAD;QAAA;QAAA;QAAA;MAAA,QAFF,eAgBE,QAAC,GAAD;QAAA,uBACE,QAAC,IAAD;UACE,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,IAAP,CADZ;UAEE,QAAQ,EAAE,IAFZ;UAGE,KAAK,EAAC,MAHR;UAIE,OAAO,EAAC,QAJV;UAKE,OAAO,EAAC,QALV;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAhBF,eA2BE,QAAC,aAAD;QAAA;QAAA;QAAA;MAAA,QA3BF,eA4BE;QAAc,SAAS,EAAE;MAAzB;QAAA;QAAA;QAAA;MAAA,QA5BF,eA6BE;QACE,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADZ;QAEE,KAAK,EAAE,GAFT;QAGE,QAAQ,EAAE,CAHZ;QAIE,SAAS,EAAE,CAJb;QAKE,UAAU;MALZ;QAAA;QAAA;QAAA;MAAA,QA7BF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAyCD;MA1CuBA,G"},"metadata":{},"sourceType":"module"}