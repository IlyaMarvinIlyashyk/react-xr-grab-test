{"ast":null,"code":"var _jsxFileName = \"/Users/ilyamarvin/Desktop/VR/grab-test/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { VRCanvas, RayGrab, DefaultXRControllers, Interactive } from \"@react-three/xr\";\nimport { Box, OrbitControls, Plane, Sky, useMatcapTexture } from \"@react-three/drei\";\nimport { usePlane, useBox, Physics } from \"@react-three/cannon\";\nimport \"./App.css\";\nimport { useState } from \"react\"; // function Cube({ position, args = [0.06, 0.06, 0.06] }) {\n//   // const [boxRef] = useBox(() => ({ position, mass: 1, args }));\n//   const [tex] = useMatcapTexture(\"C7C0AC_2E181B_543B30_6B6270\");\n//   return (\n//     <Box ref={boxRef} args={args} castShadow>\n//       <meshMatcapMaterial attach=\"material\" matcap={tex} />\n//     </Box>\n//   );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Cube(_ref) {\n  let {\n    size,\n    scale,\n    kinematic,\n    position,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(RayGrab, {\n    children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n      scale: scale,\n      position: position,\n      ...rest,\n      children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n        attach: \"geometry\",\n        args: size\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshNormalMaterial\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Cube;\n\nfunction Scene(_ref2) {\n  let {\n    setPaused,\n    paused\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sky, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DefaultXRControllers, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), [...Array(3)].map((_, i) => /*#__PURE__*/_jsxDEV(Cube, {\n      size: [0.5, 0.5, 0.5],\n      position: [0, i, -0.5]\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"spotLight\", {\n      position: [1, 8, 1],\n      angle: 0.3,\n      penumbra: 1,\n      intensity: 1,\n      castShadow: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c2 = Scene;\nexport default function App() {\n  _s();\n\n  const [paused, setPaused] = useState(false); // window.addEventListener(\"mousemove\", (e) => {\n  //   console.log(e);\n  // });\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(VRCanvas, {\n      shadowmap: \"true\",\n      vr: \"true\",\n      children: /*#__PURE__*/_jsxDEV(Scene, {\n        setPaused: setPaused,\n        paused: paused\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"LP+gq1++PMwIUyU0wT6HzqErKY0=\");\n\n_c3 = App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Cube\");\n$RefreshReg$(_c2, \"Scene\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["VRCanvas","RayGrab","DefaultXRControllers","Interactive","Box","OrbitControls","Plane","Sky","useMatcapTexture","usePlane","useBox","Physics","useState","Cube","size","scale","kinematic","position","rest","Scene","setPaused","paused","Array","map","_","i","App"],"sources":["/Users/ilyamarvin/Desktop/VR/grab-test/src/App.js"],"sourcesContent":["import {\n  VRCanvas,\n  RayGrab,\n  DefaultXRControllers,\n  Interactive,\n} from \"@react-three/xr\";\nimport {\n  Box,\n  OrbitControls,\n  Plane,\n  Sky,\n  useMatcapTexture,\n} from \"@react-three/drei\";\nimport { usePlane, useBox, Physics } from \"@react-three/cannon\";\nimport \"./App.css\";\nimport { useState } from \"react\";\n\n// function Cube({ position, args = [0.06, 0.06, 0.06] }) {\n//   // const [boxRef] = useBox(() => ({ position, mass: 1, args }));\n//   const [tex] = useMatcapTexture(\"C7C0AC_2E181B_543B30_6B6270\");\n//   return (\n//     <Box ref={boxRef} args={args} castShadow>\n//       <meshMatcapMaterial attach=\"material\" matcap={tex} />\n//     </Box>\n//   );\n// }\n\nfunction Cube({ size, scale, kinematic, position, ...rest }) {\n  return (\n    <RayGrab>\n      <mesh scale={scale} position={position} {...rest}>\n        <boxBufferGeometry attach=\"geometry\" args={size} />\n        <meshNormalMaterial />\n      </mesh>\n    </RayGrab>\n  );\n}\n\nfunction Scene({ setPaused, paused }) {\n  return (\n    <>\n      <Sky />\n      {/* <Plane ref={floorRef} args={[10, 10]} receiveShadow>\n        <meshStandardMaterial attach=\"material\" color=\"#fff\" />\n      </Plane> */}\n      <DefaultXRControllers />\n      {[...Array(3)].map((_, i) => (\n        <Cube key={i} size={[0.5, 0.5, 0.5]} position={[0, i, -0.5]} />\n      ))}\n      <OrbitControls />\n      <ambientLight intensity={0.5} />\n      <spotLight\n        position={[1, 8, 1]}\n        angle={0.3}\n        penumbra={1}\n        intensity={1}\n        castShadow\n      />\n    </>\n  );\n}\n\nexport default function App() {\n  const [paused, setPaused] = useState(false);\n\n  // window.addEventListener(\"mousemove\", (e) => {\n  //   console.log(e);\n  // });\n  return (\n    <>\n      <VRCanvas shadowmap=\"true\" vr=\"true\">\n        <Scene setPaused={setPaused} paused={paused} />\n        {/* </Physics> */}\n      </VRCanvas>\n    </>\n  );\n}\n"],"mappings":";;;AAAA,SACEA,QADF,EAEEC,OAFF,EAGEC,oBAHF,EAIEC,WAJF,QAKO,iBALP;AAMA,SACEC,GADF,EAEEC,aAFF,EAGEC,KAHF,EAIEC,GAJF,EAKEC,gBALF,QAMO,mBANP;AAOA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,OAA3B,QAA0C,qBAA1C;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA,SAASC,IAAT,OAA6D;EAAA,IAA/C;IAAEC,IAAF;IAAQC,KAAR;IAAeC,SAAf;IAA0BC,QAA1B;IAAoC,GAAGC;EAAvC,CAA+C;EAC3D,oBACE,QAAC,OAAD;IAAA,uBACE;MAAM,KAAK,EAAEH,KAAb;MAAoB,QAAQ,EAAEE,QAA9B;MAAA,GAA4CC,IAA5C;MAAA,wBACE;QAAmB,MAAM,EAAC,UAA1B;QAAqC,IAAI,EAAEJ;MAA3C;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;KATQD,I;;AAWT,SAASM,KAAT,QAAsC;EAAA,IAAvB;IAAEC,SAAF;IAAaC;EAAb,CAAuB;EACpC,oBACE;IAAA,wBACE,QAAC,GAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAKE,QAAC,oBAAD;MAAA;MAAA;MAAA;IAAA,QALF,EAMG,CAAC,GAAGC,KAAK,CAAC,CAAD,CAAT,EAAcC,GAAd,CAAkB,CAACC,CAAD,EAAIC,CAAJ,kBACjB,QAAC,IAAD;MAAc,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAApB;MAAqC,QAAQ,EAAE,CAAC,CAAD,EAAIA,CAAJ,EAAO,CAAC,GAAR;IAA/C,GAAWA,CAAX;MAAA;MAAA;MAAA;IAAA,QADD,CANH,eASE,QAAC,aAAD;MAAA;MAAA;MAAA;IAAA,QATF,eAUE;MAAc,SAAS,EAAE;IAAzB;MAAA;MAAA;MAAA;IAAA,QAVF,eAWE;MACE,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADZ;MAEE,KAAK,EAAE,GAFT;MAGE,QAAQ,EAAE,CAHZ;MAIE,SAAS,EAAE,CAJb;MAKE,UAAU;IALZ;MAAA;MAAA;MAAA;IAAA,QAXF;EAAA,gBADF;AAqBD;;MAtBQN,K;AAwBT,eAAe,SAASO,GAAT,GAAe;EAAA;;EAC5B,MAAM,CAACL,MAAD,EAASD,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC,CAD4B,CAG5B;EACA;EACA;;EACA,oBACE;IAAA,uBACE,QAAC,QAAD;MAAU,SAAS,EAAC,MAApB;MAA2B,EAAE,EAAC,MAA9B;MAAA,uBACE,QAAC,KAAD;QAAO,SAAS,EAAEQ,SAAlB;QAA6B,MAAM,EAAEC;MAArC;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAQD;;GAduBK,G;;MAAAA,G"},"metadata":{},"sourceType":"module"}