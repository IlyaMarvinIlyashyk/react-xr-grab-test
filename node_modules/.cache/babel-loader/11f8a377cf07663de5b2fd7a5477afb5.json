{"ast":null,"code":"var _jsxFileName = \"/Users/ilyamarvin/Desktop/VR/grab-test/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { VRCanvas, RayGrab, DefaultXRControllers, Interactive } from \"@react-three/xr\";\nimport { Box, OrbitControls, Plane, Sky, useMatcapTexture } from \"@react-three/drei\";\nimport { usePlane, useBox, Physics } from \"@react-three/cannon\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Cube(_ref) {\n  _s();\n\n  let {\n    position,\n    args = [0.06, 0.06, 0.06]\n  } = _ref;\n  const [boxRef] = useBox(() => ({\n    position,\n    mass: 1,\n    args\n  }));\n  const [tex] = useMatcapTexture(\"C7C0AC_2E181B_543B30_6B6270\");\n  return /*#__PURE__*/_jsxDEV(Box, {\n    ref: boxRef,\n    args: args,\n    castShadow: true,\n    children: /*#__PURE__*/_jsxDEV(\"meshMatcapMaterial\", {\n      attach: \"material\",\n      matcap: tex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n} // function JointCollider({ index, hand }) {\n//   const { gl } = useThree();\n//   const handObj = gl.xr.getHand(hand);\n//   const joint = handObj.joints[joints[index]];\n//   const size = joint.jointRadius ?? 0.0001;\n//   const [tipRef, api] = useSphere(() => ({ args: size, position: [-1, 0, 0] }));\n//   useFrame(() => {\n//     if (joint === undefined) return;\n//     api.position.set(joint.position.x, joint.position.y, joint.position.z);\n//   });\n//   return (\n//     <Sphere ref={tipRef} args={[size]}>\n//       <meshBasicMaterial transparent opacity={0} attach=\"material\" />\n//     </Sphere>\n//   );\n// }\n// function HandsReady(props) {\n//   const [ready, setReady] = useState(false);\n//   const { gl } = useThree();\n//   useEffect(() => {\n//     if (ready) return;\n//     const joint = gl.xr.getHand(0).joints[\"index-finger-tip\"];\n//     if (joint?.jointRadius !== undefined) return;\n//     const id = setInterval(() => {\n//       const joint = gl.xr.getHand(0).joints[\"index-finger-tip\"];\n//       if (joint?.jointRadius !== undefined) {\n//         setReady(true);\n//       }\n//     }, 500);\n//     return () => clearInterval(id);\n//   }, [gl, ready]);\n//   return ready ? props.children : null;\n// }\n// const HandsColliders = () =>\n//   [...Array(25)].map((_, i) => (\n//     <Fragment key={i}>\n//       <JointCollider index={i} hand={0} />\n//       <JointCollider index={i} hand={1} />\n//     </Fragment>\n//   ));\n\n\n_s(Cube, \"zMtEQXZZGOkdJ6dJyEMe75E4vx4=\", false, function () {\n  return [useBox, useMatcapTexture];\n});\n\n_c = Cube;\n\nfunction Scene() {\n  _s2();\n\n  const [floorRef] = usePlane(() => ({\n    args: [10, 10],\n    rotation: [-Math.PI / 2, 0, 0],\n    position: [0, 1, 0],\n    type: \"Static\"\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sky, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Plane, {\n      ref: floorRef,\n      args: [10, 10],\n      receiveShadow: true,\n      children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        attach: \"material\",\n        color: \"#fff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DefaultXRControllers, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), [...Array(7)].map((_, i) => /*#__PURE__*/_jsxDEV(RayGrab, {\n      children: /*#__PURE__*/_jsxDEV(Interactive // onSelect={() => console.log(\"clicked!\")}\n      // onSelectEnd={()}\n      // onHover={() => setIsHovered(true)}\n      // onBlur={() => setIsHovered(false)}\n      , {\n        children: /*#__PURE__*/_jsxDEV(Cube, {\n          position: [0, 1.1 + 0.1 * i, -0.5]\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"spotLight\", {\n      position: [1, 8, 1],\n      angle: 0.3,\n      penumbra: 1,\n      intensity: 1,\n      castShadow: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(Scene, \"Xr+apnshf9ye0T4amU9CtUF6bsU=\", false, function () {\n  return [usePlane];\n});\n\n_c2 = Scene;\n\nconst App = () => /*#__PURE__*/_jsxDEV(VRCanvas, {\n  shadowmap: \"true\",\n  vr: \"true\",\n  children: /*#__PURE__*/_jsxDEV(Physics, {\n    isPaused: paused,\n    iterations: 20,\n    tolerance: 0.0001,\n    defaultContactMaterial: {\n      friction: 0.9,\n      restitution: 0.7,\n      contactEquationStiffness: 1e7,\n      contactEquationRelaxation: 1,\n      frictionEquationStiffness: 1e7,\n      frictionEquationRelaxation: 2\n    },\n    gravity: [0, -4, 0],\n    allowSleep: false // Adjust to the headset refresh rate\n    ,\n    step: 1 / 90,\n    children: /*#__PURE__*/_jsxDEV(Scene, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 118,\n  columnNumber: 3\n}, this);\n\n_c3 = App;\nexport default App; //@ts-ignore\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Cube\");\n$RefreshReg$(_c2, \"Scene\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["VRCanvas","RayGrab","DefaultXRControllers","Interactive","Box","OrbitControls","Plane","Sky","useMatcapTexture","usePlane","useBox","Physics","useState","Cube","position","args","boxRef","mass","tex","Scene","floorRef","rotation","Math","PI","type","Array","map","_","i","App","paused","friction","restitution","contactEquationStiffness","contactEquationRelaxation","frictionEquationStiffness","frictionEquationRelaxation"],"sources":["/Users/ilyamarvin/Desktop/VR/grab-test/src/App.js"],"sourcesContent":["import {\n  VRCanvas,\n  RayGrab,\n  DefaultXRControllers,\n  Interactive,\n} from \"@react-three/xr\";\nimport {\n  Box,\n  OrbitControls,\n  Plane,\n  Sky,\n  useMatcapTexture,\n} from \"@react-three/drei\";\nimport { usePlane, useBox, Physics } from \"@react-three/cannon\";\nimport \"./App.css\";\nimport { useState } from \"react\";\n\nfunction Cube({ position, args = [0.06, 0.06, 0.06] }) {\n  const [boxRef] = useBox(() => ({ position, mass: 1, args }));\n  const [tex] = useMatcapTexture(\"C7C0AC_2E181B_543B30_6B6270\");\n\n  return (\n    <Box ref={boxRef} args={args} castShadow>\n      <meshMatcapMaterial attach=\"material\" matcap={tex} />\n    </Box>\n  );\n}\n\n// function JointCollider({ index, hand }) {\n//   const { gl } = useThree();\n//   const handObj = gl.xr.getHand(hand);\n//   const joint = handObj.joints[joints[index]];\n//   const size = joint.jointRadius ?? 0.0001;\n//   const [tipRef, api] = useSphere(() => ({ args: size, position: [-1, 0, 0] }));\n//   useFrame(() => {\n//     if (joint === undefined) return;\n//     api.position.set(joint.position.x, joint.position.y, joint.position.z);\n//   });\n\n//   return (\n//     <Sphere ref={tipRef} args={[size]}>\n//       <meshBasicMaterial transparent opacity={0} attach=\"material\" />\n//     </Sphere>\n//   );\n// }\n\n// function HandsReady(props) {\n//   const [ready, setReady] = useState(false);\n//   const { gl } = useThree();\n//   useEffect(() => {\n//     if (ready) return;\n//     const joint = gl.xr.getHand(0).joints[\"index-finger-tip\"];\n//     if (joint?.jointRadius !== undefined) return;\n//     const id = setInterval(() => {\n//       const joint = gl.xr.getHand(0).joints[\"index-finger-tip\"];\n//       if (joint?.jointRadius !== undefined) {\n//         setReady(true);\n//       }\n//     }, 500);\n//     return () => clearInterval(id);\n//   }, [gl, ready]);\n\n//   return ready ? props.children : null;\n// }\n\n// const HandsColliders = () =>\n//   [...Array(25)].map((_, i) => (\n//     <Fragment key={i}>\n//       <JointCollider index={i} hand={0} />\n//       <JointCollider index={i} hand={1} />\n//     </Fragment>\n//   ));\n\nfunction Scene() {\n  const [floorRef] = usePlane(() => ({\n    args: [10, 10],\n    rotation: [-Math.PI / 2, 0, 0],\n    position: [0, 1, 0],\n    type: \"Static\",\n  }));\n  return (\n    <>\n      <Sky />\n      <Plane ref={floorRef} args={[10, 10]} receiveShadow>\n        <meshStandardMaterial attach=\"material\" color=\"#fff\" />\n      </Plane>\n      {/* <Hands />\n      <HandsReady>\n        <HandsColliders />\n      </HandsReady> */}\n      <DefaultXRControllers />\n      {[...Array(7)].map((_, i) => (\n        <RayGrab key={i}>\n          <Interactive\n          // onSelect={() => console.log(\"clicked!\")}\n          // onSelectEnd={()}\n          // onHover={() => setIsHovered(true)}\n          // onBlur={() => setIsHovered(false)}\n          >\n            <Cube key={i} position={[0, 1.1 + 0.1 * i, -0.5]} />\n          </Interactive>\n        </RayGrab>\n      ))}\n      <OrbitControls />\n      <ambientLight intensity={0.5} />\n      <spotLight\n        position={[1, 8, 1]}\n        angle={0.3}\n        penumbra={1}\n        intensity={1}\n        castShadow\n      />\n    </>\n  );\n}\n\nconst App = () => (\n  <VRCanvas shadowmap=\"true\" vr=\"true\">\n    <Physics\n      isPaused={paused}\n      iterations={20}\n      tolerance={0.0001}\n      defaultContactMaterial={{\n        friction: 0.9,\n        restitution: 0.7,\n        contactEquationStiffness: 1e7,\n        contactEquationRelaxation: 1,\n        frictionEquationStiffness: 1e7,\n        frictionEquationRelaxation: 2,\n      }}\n      gravity={[0, -4, 0]}\n      allowSleep={false}\n      // Adjust to the headset refresh rate\n      step={1 / 90}\n    >\n      <Scene />\n    </Physics>\n  </VRCanvas>\n);\n\nexport default App;\n\n//@ts-ignore\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}