{"ast":null,"code":"var _jsxFileName = \"/Users/ilyamarvin/Desktop/VR/grab-test/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport { createRoot } from \"react-dom/client\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { VRCanvas, Hands } from \"@react-three/xr\";\nimport { useThree, useFrame } from \"@react-three/fiber\";\nimport { Box, OrbitControls, Plane, Sphere, Sky, useMatcapTexture } from \"@react-three/drei\";\nimport { usePlane, useBox, Physics, useSphere } from \"@react-three/cannon\";\nimport { joints } from \"./joints\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Cube(_ref) {\n  _s();\n\n  let {\n    position,\n    args = [0.06, 0.06, 0.06]\n  } = _ref;\n  const [boxRef] = useBox(() => ({\n    position,\n    mass: 1,\n    args\n  }));\n  const [tex] = useMatcapTexture(\"C7C0AC_2E181B_543B30_6B6270\");\n  return /*#__PURE__*/_jsxDEV(Box, {\n    ref: boxRef,\n    args: args,\n    castShadow: true,\n    children: /*#__PURE__*/_jsxDEV(\"meshMatcapMaterial\", {\n      attach: \"material\",\n      matcap: tex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Cube, \"zMtEQXZZGOkdJ6dJyEMe75E4vx4=\", false, function () {\n  return [useBox, useMatcapTexture];\n});\n\n_c = Cube;\n\nfunction JointCollider(_ref2) {\n  _s2();\n\n  var _joint$jointRadius;\n\n  let {\n    index,\n    hand\n  } = _ref2;\n  const {\n    gl\n  } = useThree();\n  const handObj = gl.xr.getHand(hand);\n  const joint = handObj.joints[joints[index]];\n  const size = (_joint$jointRadius = joint.jointRadius) !== null && _joint$jointRadius !== void 0 ? _joint$jointRadius : 0.0001;\n  const [tipRef, api] = useSphere(() => ({\n    args: size,\n    position: [-1, 0, 0]\n  }));\n  useFrame(() => {\n    if (joint === undefined) return;\n    api.position.set(joint.position.x, joint.position.y, joint.position.z);\n  });\n  return /*#__PURE__*/_jsxDEV(Sphere, {\n    ref: tipRef,\n    args: [size],\n    children: /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n      transparent: true,\n      opacity: 0,\n      attach: \"material\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(JointCollider, \"XUzWIoohqUlakQA9nsW/DnMaTG8=\", false, function () {\n  return [useThree, useSphere, useFrame];\n});\n\n_c2 = JointCollider;\n\nfunction HandsReady(props) {\n  _s3();\n\n  const [ready, setReady] = useState(false);\n  const {\n    gl\n  } = useThree();\n  useEffect(() => {\n    if (ready) return;\n    const joint = gl.xr.getHand(0).joints[\"index-finger-tip\"];\n    if ((joint === null || joint === void 0 ? void 0 : joint.jointRadius) !== undefined) return;\n    const id = setInterval(() => {\n      const joint = gl.xr.getHand(0).joints[\"index-finger-tip\"];\n\n      if ((joint === null || joint === void 0 ? void 0 : joint.jointRadius) !== undefined) {\n        setReady(true);\n      }\n    }, 500);\n    return () => clearInterval(id);\n  }, [gl, ready]);\n  return ready ? props.children : null;\n}\n\n_s3(HandsReady, \"LnB81lzxGJtIfmSShGumRUjsB4M=\", false, function () {\n  return [useThree];\n});\n\n_c3 = HandsReady;\n\nconst HandsColliders = () => [...Array(25)].map((_, i) => /*#__PURE__*/_jsxDEV(Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(JointCollider, {\n    index: i,\n    hand: 0\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(JointCollider, {\n    index: i,\n    hand: 1\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }, this)]\n}, i, true, {\n  fileName: _jsxFileName,\n  lineNumber: 67,\n  columnNumber: 5\n}, this));\n\n_c4 = HandsColliders;\n\nfunction Scene() {\n  _s4();\n\n  const [floorRef] = usePlane(() => ({\n    args: [10, 10],\n    rotation: [-Math.PI / 2, 0, 0],\n    position: [0, 1, 0],\n    type: \"Static\"\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sky, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Plane, {\n      ref: floorRef,\n      args: [10, 10],\n      receiveShadow: true,\n      children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        attach: \"material\",\n        color: \"#fff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hands, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HandsReady, {\n      children: /*#__PURE__*/_jsxDEV(HandsColliders, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), [...Array(7)].map((_, i) => /*#__PURE__*/_jsxDEV(Cube, {\n      position: [0, 1.1 + 0.1 * i, -0.5]\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"spotLight\", {\n      position: [1, 8, 1],\n      angle: 0.3,\n      penumbra: 1,\n      intensity: 1,\n      castShadow: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s4(Scene, \"Xr+apnshf9ye0T4amU9CtUF6bsU=\", false, function () {\n  return [usePlane];\n});\n\n_c5 = Scene;\n\nconst App = () => /*#__PURE__*/_jsxDEV(VRCanvas, {\n  shadowMap: true,\n  children: /*#__PURE__*/_jsxDEV(Physics, {\n    gravity: [0, -2, 0],\n    iterations: 20,\n    defaultContactMaterial: {\n      friction: 0.09\n    },\n    children: /*#__PURE__*/_jsxDEV(Scene, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 107,\n  columnNumber: 3\n}, this);\n\n_c6 = App;\nexport default App; //@ts-ignore\n\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 124,\n  columnNumber: 13\n}, this));\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Cube\");\n$RefreshReg$(_c2, \"JointCollider\");\n$RefreshReg$(_c3, \"HandsReady\");\n$RefreshReg$(_c4, \"HandsColliders\");\n$RefreshReg$(_c5, \"Scene\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["createRoot","React","useState","useEffect","Fragment","VRCanvas","Hands","useThree","useFrame","Box","OrbitControls","Plane","Sphere","Sky","useMatcapTexture","usePlane","useBox","Physics","useSphere","joints","Cube","position","args","boxRef","mass","tex","JointCollider","index","hand","gl","handObj","xr","getHand","joint","size","jointRadius","tipRef","api","undefined","set","x","y","z","HandsReady","props","ready","setReady","id","setInterval","clearInterval","children","HandsColliders","Array","map","_","i","Scene","floorRef","rotation","Math","PI","type","App","friction","root","document","getElementById","render"],"sources":["/Users/ilyamarvin/Desktop/VR/grab-test/src/App.js"],"sourcesContent":["import { createRoot } from \"react-dom/client\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { VRCanvas, Hands } from \"@react-three/xr\";\nimport { useThree, useFrame } from \"@react-three/fiber\";\nimport {\n  Box,\n  OrbitControls,\n  Plane,\n  Sphere,\n  Sky,\n  useMatcapTexture,\n} from \"@react-three/drei\";\nimport { usePlane, useBox, Physics, useSphere } from \"@react-three/cannon\";\nimport { joints } from \"./joints\";\nimport \"./App.css\";\n\nfunction Cube({ position, args = [0.06, 0.06, 0.06] }) {\n  const [boxRef] = useBox(() => ({ position, mass: 1, args }));\n  const [tex] = useMatcapTexture(\"C7C0AC_2E181B_543B30_6B6270\");\n\n  return (\n    <Box ref={boxRef} args={args} castShadow>\n      <meshMatcapMaterial attach=\"material\" matcap={tex} />\n    </Box>\n  );\n}\n\nfunction JointCollider({ index, hand }) {\n  const { gl } = useThree();\n  const handObj = gl.xr.getHand(hand);\n  const joint = handObj.joints[joints[index]];\n  const size = joint.jointRadius ?? 0.0001;\n  const [tipRef, api] = useSphere(() => ({ args: size, position: [-1, 0, 0] }));\n  useFrame(() => {\n    if (joint === undefined) return;\n    api.position.set(joint.position.x, joint.position.y, joint.position.z);\n  });\n\n  return (\n    <Sphere ref={tipRef} args={[size]}>\n      <meshBasicMaterial transparent opacity={0} attach=\"material\" />\n    </Sphere>\n  );\n}\n\nfunction HandsReady(props) {\n  const [ready, setReady] = useState(false);\n  const { gl } = useThree();\n  useEffect(() => {\n    if (ready) return;\n    const joint = gl.xr.getHand(0).joints[\"index-finger-tip\"];\n    if (joint?.jointRadius !== undefined) return;\n    const id = setInterval(() => {\n      const joint = gl.xr.getHand(0).joints[\"index-finger-tip\"];\n      if (joint?.jointRadius !== undefined) {\n        setReady(true);\n      }\n    }, 500);\n    return () => clearInterval(id);\n  }, [gl, ready]);\n\n  return ready ? props.children : null;\n}\n\nconst HandsColliders = () =>\n  [...Array(25)].map((_, i) => (\n    <Fragment key={i}>\n      <JointCollider index={i} hand={0} />\n      <JointCollider index={i} hand={1} />\n    </Fragment>\n  ));\n\nfunction Scene() {\n  const [floorRef] = usePlane(() => ({\n    args: [10, 10],\n    rotation: [-Math.PI / 2, 0, 0],\n    position: [0, 1, 0],\n    type: \"Static\",\n  }));\n  return (\n    <>\n      <Sky />\n      <Plane ref={floorRef} args={[10, 10]} receiveShadow>\n        <meshStandardMaterial attach=\"material\" color=\"#fff\" />\n      </Plane>\n      <Hands />\n      <HandsReady>\n        <HandsColliders />\n      </HandsReady>\n      {[...Array(7)].map((_, i) => (\n        <Cube key={i} position={[0, 1.1 + 0.1 * i, -0.5]} />\n      ))}\n      <OrbitControls />\n      <ambientLight intensity={0.5} />\n      <spotLight\n        position={[1, 8, 1]}\n        angle={0.3}\n        penumbra={1}\n        intensity={1}\n        castShadow\n      />\n    </>\n  );\n}\n\nconst App = () => (\n  <VRCanvas shadowMap>\n    <Physics\n      gravity={[0, -2, 0]}\n      iterations={20}\n      defaultContactMaterial={{\n        friction: 0.09,\n      }}\n    >\n      <Scene />\n    </Physics>\n  </VRCanvas>\n);\n\nexport default App;\n\n//@ts-ignore\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}